/*made without using the .csv data from the coursera materials. instead, created an array 
containing both boy and girl baby names from 2012-2014 and i ranked them myself using the baby data
*/

public class main {
    public static void main(String[] args) {
        Baby Sophia = new Baby("Sophia",'F',10,10,4);
        Sophia.setRank(1,1,3);
        Baby Emma = new Baby("Emma",'F',9,8,5);
        Emma.setRank(2,2,1);
        Baby Isabella = new Baby("Isabella",'F',8,7,3);
        Isabella.setRank(3,4,4);
        Baby Olivia = new Baby("Olivia",'F',7,8,4);
        Olivia.setRank(4,3,2);
        Baby Ava = new Baby("Ava",'F',6,6,2);
        Ava.setRank(5,5,5);
        Baby Jacob = new Baby("Jacob",'M',8,8,5);
        Jacob.setRank(1,3,4);
        Baby Mason = new Baby("Mason",'M',7,8,6);
        Mason.setRank(2,4,3);
        Baby Ethan = new Baby("Ethan",'M',7,0,0);
        Ethan.setRank(3,0,0);
        Baby Noah = new Baby("Noah",'M',6,12,7);
        Noah.setRank(4,1,1);
        Baby William = new Baby("William",'M',5,7,5);
        William.setRank(5,5,5);
        Baby Liam = new Baby("Liam",'M',0,9,6);
        Liam.setRank(0,2,2);
        Baby[] babyList = {Sophia,Emma,Isabella,Olivia,Ava,Jacob,Mason,Ethan,Noah,William,Liam};
        
        System.out.println(getRank(2012,"mASoN",'F',babyList));
        System.out.println(getName(2013,1,'F',babyList));
        System.out.println(whatIsNameInYear("Isabella",2012,2014,'M',babyList));
        System.out.println(whatIsNameInYear("Mason",2014,2013,'F',babyList));
        System.out.println(whatIsNameInYear("olIvIA",2014,2012,'F',babyList));
        System.out.println(yearOfHighestRank("mAsOn",'M',babyList));
        System.out.println(yearOfHighestRank("avA",'F',babyList));
        System.out.println(yearOfHighestRank("Liam",'M',babyList));
        System.out.println(yearOfHighestRank("Ethan",'M',babyList));
        System.out.println(getAverageRank("Mason",'M',babyList));
        System.out.println(getAverageRank("Jacob",'M',babyList));
        System.out.println(getTotalBirthsRankedHigher(2012,"Ethan",'M',babyList));
    }
    
    public static void totalBirths(Baby[] babyList) {
        int boyCount = 0;
        int girlCount = 0;
        int total = 0;
        for (Baby baby : babyList) {
            if (baby.getGender() == 'M') {
                boyCount += baby.getTotalBirths();
            } else if (baby.getGender() == 'F') {
                girlCount += baby.getTotalBirths();
            }
            total += baby.getTotalBirths();
        }
        System.out.println("Total births: " + total + "\n" +
                           "Total male births: " + boyCount + "\n" +
                           "Total female births: " + girlCount);
    }
    
    public static int getRank(int year, String name, char gender, Baby[] babyList) {
        int toReturn = -1;
        for (Baby baby : babyList) {
            if (baby.getName().equalsIgnoreCase(name) && baby.getGender() == gender) {
                System.out.println("name and gender matched");
                toReturn = baby.getRank(year);
            } 
        } 
        return toReturn;
    }
    
    public static String getName(int year, int rank, char gender, Baby[] babyList) {
        String toReturn = "NO NAME";
        for (Baby baby : babyList) {
            if (baby.getRank(year) == rank && baby.getGender() == gender) {
                toReturn = baby.getName();
            }
        }
        return toReturn;
    }
    
    public static String whatIsNameInYear(String name, int year, int newYear, char gender, Baby[] babyList) {
        int firstRank = -1;
        int nextRank = -1;
        String originalName = "";
        String newName = "";
        char originalGender = '0';
        for (Baby baby : babyList) {
            if (baby.getName().equalsIgnoreCase(name)) {
                originalName = baby.getName();
                firstRank = baby.getRank(year);
                originalGender = baby.getGender();
            }
        }
        for (Baby baby : babyList) {
            if (baby.getRank(newYear) == firstRank && baby.getGender() == gender) {
                newName = baby.getName();
            }
        }
        if (originalGender == 'M') {
            return originalName + " born in " + year + " would be " + newName + " if he was born in " + newYear + ".";
        } else if (originalGender == 'F') {
            return originalName + " born in " + year + " would be " + newName + " if she was born in " + newYear + ".";
        }
        return newName;
    }
    
    public static int yearOfHighestRank(String name, char gender, Baby[] babyList) {
        int highestRank = 0;
        for (Baby baby : babyList) {
            if (baby.getName().equalsIgnoreCase(name) && baby.getGender() == gender) {
                if (baby.getRank2012() > baby.getRank2013() && baby.getRank2012() > baby.getRank2014() || baby.getRank2013() == 0 || baby.getRank2014() == 0) {
                    highestRank = 2012;
                } else if (baby.getRank2013() > baby.getRank2012() && baby.getRank2013() > baby.getRank2014() || baby.getRank2012() == 0 || baby.getRank2014() == 0) {
                    highestRank = 2013;
                } else if (baby.getRank2014() > baby.getRank2012() && baby.getRank2014() > baby.getRank2013() || baby.getRank2012() == 0 || baby.getRank2013() == 0) {
                    highestRank = 2014;
                } else if (baby.getRank2012() == baby.getRank2013()) {
                    highestRank = 2012;
                } else if (baby.getRank2013() == baby.getRank2014()) {
                    highestRank = 2013;
                }
            }
        }
        return highestRank;
    }
    
    public static double getAverageRank(String name, char gender, Baby[] babyList) {
        int rankSum = 0;
        for (Baby baby : babyList) {
            if (baby.getName().equalsIgnoreCase(name) && baby.getGender() == gender) {
                if (baby.getRank2012() != 0 && baby.getRank2013() != 0 && baby.getRank2014() != 0) {
                    rankSum = baby.getRank2012() + baby.getRank2013() + baby.getRank2014();
                } else if (baby.getRank2012() == 0 && baby.getRank2013() == 0 && baby.getRank2014() == 0) {
                    return -1;
                }
            }
        }
        return rankSum/3.0;
    }
    
    public static int getTotalBirthsRankedHigher(int year, String name, char gender, Baby[] babyList) {
        int totalBirths = 0;
        int currRank = -1;
        for (Baby baby : babyList) {
            if (baby.getName().equalsIgnoreCase(name) && baby.getGender() == gender) {
                currRank = baby.getRank(year);
            }
        }
        System.out.println("total births value " + totalBirths);
        for (Baby baby : babyList) {
            if (baby.getGender() == gender && baby.getRank(year) < currRank) {
                totalBirths += baby.getBirthsForYear(year);
            }
        }
        return totalBirths;
    }
    
    public class Baby {
    private String name;
    private char gender;
    private int numberBorn2012;
    private int numberBorn2013;
    private int numberBorn2014;
    private int rank2012;
    private int rank2013;
    private int rank2014;
    
    public Baby(String name, char gender, int numberBorn2012, int numberBorn2013, int numberBorn2014) {
        this.name = name;
        this.gender = gender;
        this.numberBorn2012 = numberBorn2012;
        this.numberBorn2013 = numberBorn2013;
        this.numberBorn2014 = numberBorn2014;
    }
    
    public String getName() {
        return this.name;
    }
    
    public void setRank(int rank2012, int rank2013, int rank2014) {
        this.rank2012 = rank2012;
        this.rank2013 = rank2013;
        this.rank2014 = rank2014;
    }
    
    public int getRank(int year) {
        if (year == 2012) {
            return this.rank2012;
        } else if (year == 2013) {
            return this.rank2013;
        } else if (year == 2014) {
            return this.rank2014;
        }
        return -1;
    }
    
    public int getRank2012() {
        return this.rank2012;
    }
    
    public int getRank2013() {
        return this.rank2013;
    }
    
    public int getRank2014() {
        return this.rank2014;
    }
    
    public int getTotalBirths() {
        return this.numberBorn2012 + this.numberBorn2013 + this.numberBorn2014;
    }
    
    public int getBirthsForYear(int year) {
        if (year == 2012) {
            return this.numberBorn2012;
        } else if (year == 2013) {
            return this.numberBorn2013;
        } else if (year == 2014) {
            return this.numberBorn2014;
        }
        return -1;
    }
    
    public char getGender() {
        return this.gender;
    }
    
    public String toString() {
        return this.name + ", " + this.gender + ", births in 2012: " + this.numberBorn2012 + ", births in 2013: " + this.numberBorn2013 + ", births in 2014: " + this.numberBorn2014;
    }
}
